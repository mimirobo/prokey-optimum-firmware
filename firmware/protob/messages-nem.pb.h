/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9.3 */

#ifndef PB_HW_TREZOR_MESSAGES_NEM_MESSAGES_NEM_PB_H_INCLUDED
#define PB_HW_TREZOR_MESSAGES_NEM_MESSAGES_NEM_PB_H_INCLUDED
#include "pb.h"
/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _NEMMosaicLevy {
    NEMMosaicLevy_MosaicLevy_Absolute = 1,
    NEMMosaicLevy_MosaicLevy_Percentile = 2
} NEMMosaicLevy;
#define _NEMMosaicLevy_MIN NEMMosaicLevy_MosaicLevy_Absolute
#define _NEMMosaicLevy_MAX NEMMosaicLevy_MosaicLevy_Percentile
#define _NEMMosaicLevy_ARRAYSIZE ((NEMMosaicLevy)(NEMMosaicLevy_MosaicLevy_Percentile+1))

typedef enum _NEMSupplyChangeType {
    NEMSupplyChangeType_SupplyChange_Increase = 1,
    NEMSupplyChangeType_SupplyChange_Decrease = 2
} NEMSupplyChangeType;
#define _NEMSupplyChangeType_MIN NEMSupplyChangeType_SupplyChange_Increase
#define _NEMSupplyChangeType_MAX NEMSupplyChangeType_SupplyChange_Decrease
#define _NEMSupplyChangeType_ARRAYSIZE ((NEMSupplyChangeType)(NEMSupplyChangeType_SupplyChange_Decrease+1))

typedef enum _NEMModificationType {
    NEMModificationType_CosignatoryModification_Add = 1,
    NEMModificationType_CosignatoryModification_Delete = 2
} NEMModificationType;
#define _NEMModificationType_MIN NEMModificationType_CosignatoryModification_Add
#define _NEMModificationType_MAX NEMModificationType_CosignatoryModification_Delete
#define _NEMModificationType_ARRAYSIZE ((NEMModificationType)(NEMModificationType_CosignatoryModification_Delete+1))

typedef enum _NEMImportanceTransferMode {
    NEMImportanceTransferMode_ImportanceTransfer_Activate = 1,
    NEMImportanceTransferMode_ImportanceTransfer_Deactivate = 2
} NEMImportanceTransferMode;
#define _NEMImportanceTransferMode_MIN NEMImportanceTransferMode_ImportanceTransfer_Activate
#define _NEMImportanceTransferMode_MAX NEMImportanceTransferMode_ImportanceTransfer_Deactivate
#define _NEMImportanceTransferMode_ARRAYSIZE ((NEMImportanceTransferMode)(NEMImportanceTransferMode_ImportanceTransfer_Deactivate+1))

/* Struct definitions */
typedef struct _NEMAddress {
    char address[41];
/* @@protoc_insertion_point(struct:NEMAddress) */
} NEMAddress;

typedef PB_BYTES_ARRAY_T(32) NEMCosignatoryModification_public_key_t;
typedef struct _NEMCosignatoryModification {
    bool has_type;
    NEMModificationType type;
    bool has_public_key;
    NEMCosignatoryModification_public_key_t public_key;
/* @@protoc_insertion_point(struct:NEMCosignatoryModification) */
} NEMCosignatoryModification;

typedef PB_BYTES_ARRAY_T(32) NEMDecryptMessage_public_key_t;
typedef PB_BYTES_ARRAY_T(1072) NEMDecryptMessage_payload_t;
typedef struct _NEMDecryptMessage {
    pb_size_t address_n_count;
    uint32_t address_n[8];
    bool has_network;
    uint32_t network;
    bool has_public_key;
    NEMDecryptMessage_public_key_t public_key;
    bool has_payload;
    NEMDecryptMessage_payload_t payload;
/* @@protoc_insertion_point(struct:NEMDecryptMessage) */
} NEMDecryptMessage;

typedef PB_BYTES_ARRAY_T(1024) NEMDecryptedMessage_payload_t;
typedef struct _NEMDecryptedMessage {
    bool has_payload;
    NEMDecryptedMessage_payload_t payload;
/* @@protoc_insertion_point(struct:NEMDecryptedMessage) */
} NEMDecryptedMessage;

typedef struct _NEMGetAddress {
    pb_size_t address_n_count;
    uint32_t address_n[8];
    bool has_network;
    uint32_t network;
    bool has_show_display;
    bool show_display;
/* @@protoc_insertion_point(struct:NEMGetAddress) */
} NEMGetAddress;

typedef PB_BYTES_ARRAY_T(32) NEMImportanceTransfer_public_key_t;
typedef struct _NEMImportanceTransfer {
    bool has_mode;
    NEMImportanceTransferMode mode;
    bool has_public_key;
    NEMImportanceTransfer_public_key_t public_key;
/* @@protoc_insertion_point(struct:NEMImportanceTransfer) */
} NEMImportanceTransfer;

typedef struct _NEMMosaic {
    bool has_namespace;
    char namespace[145];
    bool has_mosaic;
    char mosaic[33];
    bool has_quantity;
    uint64_t quantity;
/* @@protoc_insertion_point(struct:NEMMosaic) */
} NEMMosaic;

typedef struct _NEMMosaicDefinition {
    bool has_name;
    char name[32];
    bool has_ticker;
    char ticker[16];
    bool has_namespace;
    char namespace[145];
    bool has_mosaic;
    char mosaic[33];
    bool has_divisibility;
    uint32_t divisibility;
    bool has_levy;
    NEMMosaicLevy levy;
    bool has_fee;
    uint64_t fee;
    bool has_levy_address;
    char levy_address[41];
    bool has_levy_namespace;
    char levy_namespace[145];
    bool has_levy_mosaic;
    char levy_mosaic[33];
    bool has_supply;
    uint64_t supply;
    bool has_mutable_supply;
    bool mutable_supply;
    bool has_transferable;
    bool transferable;
    bool has_description;
    char description[513];
    pb_size_t networks_count;
    uint32_t networks[8];
/* @@protoc_insertion_point(struct:NEMMosaicDefinition) */
} NEMMosaicDefinition;

typedef struct _NEMMosaicSupplyChange {
    bool has_namespace;
    char namespace[145];
    bool has_mosaic;
    char mosaic[33];
    bool has_type;
    NEMSupplyChangeType type;
    bool has_delta;
    uint64_t delta;
/* @@protoc_insertion_point(struct:NEMMosaicSupplyChange) */
} NEMMosaicSupplyChange;

typedef struct _NEMProvisionNamespace {
    bool has_namespace;
    char namespace[65];
    bool has_parent;
    char parent[81];
    bool has_sink;
    char sink[41];
    bool has_fee;
    uint64_t fee;
/* @@protoc_insertion_point(struct:NEMProvisionNamespace) */
} NEMProvisionNamespace;

typedef PB_BYTES_ARRAY_T(2048) NEMSignedTx_data_t;
typedef PB_BYTES_ARRAY_T(64) NEMSignedTx_signature_t;
typedef struct _NEMSignedTx {
    bool has_data;
    NEMSignedTx_data_t data;
    bool has_signature;
    NEMSignedTx_signature_t signature;
/* @@protoc_insertion_point(struct:NEMSignedTx) */
} NEMSignedTx;

typedef PB_BYTES_ARRAY_T(32) NEMTransactionCommon_signer_t;
typedef struct _NEMTransactionCommon {
    pb_size_t address_n_count;
    uint32_t address_n[8];
    bool has_network;
    uint32_t network;
    bool has_timestamp;
    uint32_t timestamp;
    bool has_fee;
    uint64_t fee;
    bool has_deadline;
    uint32_t deadline;
    bool has_signer;
    NEMTransactionCommon_signer_t signer;
/* @@protoc_insertion_point(struct:NEMTransactionCommon) */
} NEMTransactionCommon;

typedef struct _NEMAggregateModification {
    pb_size_t modifications_count;
    NEMCosignatoryModification modifications[16];
    bool has_relative_change;
    int32_t relative_change;
/* @@protoc_insertion_point(struct:NEMAggregateModification) */
} NEMAggregateModification;

typedef struct _NEMMosaicCreation {
    bool has_definition;
    NEMMosaicDefinition definition;
    bool has_sink;
    char sink[41];
    bool has_fee;
    uint64_t fee;
/* @@protoc_insertion_point(struct:NEMMosaicCreation) */
} NEMMosaicCreation;

typedef PB_BYTES_ARRAY_T(1024) NEMTransfer_payload_t;
typedef PB_BYTES_ARRAY_T(32) NEMTransfer_public_key_t;
typedef struct _NEMTransfer {
    bool has_recipient;
    char recipient[41];
    bool has_amount;
    uint64_t amount;
    bool has_payload;
    NEMTransfer_payload_t payload;
    bool has_public_key;
    NEMTransfer_public_key_t public_key;
    pb_size_t mosaics_count;
    NEMMosaic mosaics[16];
/* @@protoc_insertion_point(struct:NEMTransfer) */
} NEMTransfer;

typedef struct _NEMSignTx {
    bool has_transaction;
    NEMTransactionCommon transaction;
    bool has_multisig;
    NEMTransactionCommon multisig;
    bool has_transfer;
    NEMTransfer transfer;
    bool has_cosigning;
    bool cosigning;
    bool has_provision_namespace;
    NEMProvisionNamespace provision_namespace;
    bool has_mosaic_creation;
    NEMMosaicCreation mosaic_creation;
    bool has_supply_change;
    NEMMosaicSupplyChange supply_change;
    bool has_aggregate_modification;
    NEMAggregateModification aggregate_modification;
    bool has_importance_transfer;
    NEMImportanceTransfer importance_transfer;
/* @@protoc_insertion_point(struct:NEMSignTx) */
} NEMSignTx;

/* Default values for struct fields */

/* Initializer values for message structs */
#define NEMGetAddress_init_default               {0, {0, 0, 0, 0, 0, 0, 0, 0}, false, 0, false, 0}
#define NEMAddress_init_default                  {""}
#define NEMSignTx_init_default                   {false, NEMTransactionCommon_init_default, false, NEMTransactionCommon_init_default, false, NEMTransfer_init_default, false, 0, false, NEMProvisionNamespace_init_default, false, NEMMosaicCreation_init_default, false, NEMMosaicSupplyChange_init_default, false, NEMAggregateModification_init_default, false, NEMImportanceTransfer_init_default}
#define NEMTransactionCommon_init_default        {0, {0, 0, 0, 0, 0, 0, 0, 0}, false, 0, false, 0, false, 0, false, 0, false, {0, {0}}}
#define NEMTransfer_init_default                 {false, "", false, 0, false, {0, {0}}, false, {0, {0}}, 0, {NEMMosaic_init_default, NEMMosaic_init_default, NEMMosaic_init_default, NEMMosaic_init_default, NEMMosaic_init_default, NEMMosaic_init_default, NEMMosaic_init_default, NEMMosaic_init_default, NEMMosaic_init_default, NEMMosaic_init_default, NEMMosaic_init_default, NEMMosaic_init_default, NEMMosaic_init_default, NEMMosaic_init_default, NEMMosaic_init_default, NEMMosaic_init_default}}
#define NEMMosaic_init_default                   {false, "", false, "", false, 0}
#define NEMProvisionNamespace_init_default       {false, "", false, "", false, "", false, 0}
#define NEMMosaicCreation_init_default           {false, NEMMosaicDefinition_init_default, false, "", false, 0}
#define NEMMosaicDefinition_init_default         {false, "", false, "", false, "", false, "", false, 0, false, _NEMMosaicLevy_MIN, false, 0, false, "", false, "", false, "", false, 0, false, 0, false, 0, false, "", 0, {0, 0, 0, 0, 0, 0, 0, 0}}
#define NEMMosaicSupplyChange_init_default       {false, "", false, "", false, _NEMSupplyChangeType_MIN, false, 0}
#define NEMAggregateModification_init_default    {0, {NEMCosignatoryModification_init_default, NEMCosignatoryModification_init_default, NEMCosignatoryModification_init_default, NEMCosignatoryModification_init_default, NEMCosignatoryModification_init_default, NEMCosignatoryModification_init_default, NEMCosignatoryModification_init_default, NEMCosignatoryModification_init_default, NEMCosignatoryModification_init_default, NEMCosignatoryModification_init_default, NEMCosignatoryModification_init_default, NEMCosignatoryModification_init_default, NEMCosignatoryModification_init_default, NEMCosignatoryModification_init_default, NEMCosignatoryModification_init_default, NEMCosignatoryModification_init_default}, false, 0}
#define NEMCosignatoryModification_init_default  {false, _NEMModificationType_MIN, false, {0, {0}}}
#define NEMImportanceTransfer_init_default       {false, _NEMImportanceTransferMode_MIN, false, {0, {0}}}
#define NEMSignedTx_init_default                 {false, {0, {0}}, false, {0, {0}}}
#define NEMDecryptMessage_init_default           {0, {0, 0, 0, 0, 0, 0, 0, 0}, false, 0, false, {0, {0}}, false, {0, {0}}}
#define NEMDecryptedMessage_init_default         {false, {0, {0}}}
#define NEMGetAddress_init_zero                  {0, {0, 0, 0, 0, 0, 0, 0, 0}, false, 0, false, 0}
#define NEMAddress_init_zero                     {""}
#define NEMSignTx_init_zero                      {false, NEMTransactionCommon_init_zero, false, NEMTransactionCommon_init_zero, false, NEMTransfer_init_zero, false, 0, false, NEMProvisionNamespace_init_zero, false, NEMMosaicCreation_init_zero, false, NEMMosaicSupplyChange_init_zero, false, NEMAggregateModification_init_zero, false, NEMImportanceTransfer_init_zero}
#define NEMTransactionCommon_init_zero           {0, {0, 0, 0, 0, 0, 0, 0, 0}, false, 0, false, 0, false, 0, false, 0, false, {0, {0}}}
#define NEMTransfer_init_zero                    {false, "", false, 0, false, {0, {0}}, false, {0, {0}}, 0, {NEMMosaic_init_zero, NEMMosaic_init_zero, NEMMosaic_init_zero, NEMMosaic_init_zero, NEMMosaic_init_zero, NEMMosaic_init_zero, NEMMosaic_init_zero, NEMMosaic_init_zero, NEMMosaic_init_zero, NEMMosaic_init_zero, NEMMosaic_init_zero, NEMMosaic_init_zero, NEMMosaic_init_zero, NEMMosaic_init_zero, NEMMosaic_init_zero, NEMMosaic_init_zero}}
#define NEMMosaic_init_zero                      {false, "", false, "", false, 0}
#define NEMProvisionNamespace_init_zero          {false, "", false, "", false, "", false, 0}
#define NEMMosaicCreation_init_zero              {false, NEMMosaicDefinition_init_zero, false, "", false, 0}
#define NEMMosaicDefinition_init_zero            {false, "", false, "", false, "", false, "", false, 0, false, _NEMMosaicLevy_MIN, false, 0, false, "", false, "", false, "", false, 0, false, 0, false, 0, false, "", 0, {0, 0, 0, 0, 0, 0, 0, 0}}
#define NEMMosaicSupplyChange_init_zero          {false, "", false, "", false, _NEMSupplyChangeType_MIN, false, 0}
#define NEMAggregateModification_init_zero       {0, {NEMCosignatoryModification_init_zero, NEMCosignatoryModification_init_zero, NEMCosignatoryModification_init_zero, NEMCosignatoryModification_init_zero, NEMCosignatoryModification_init_zero, NEMCosignatoryModification_init_zero, NEMCosignatoryModification_init_zero, NEMCosignatoryModification_init_zero, NEMCosignatoryModification_init_zero, NEMCosignatoryModification_init_zero, NEMCosignatoryModification_init_zero, NEMCosignatoryModification_init_zero, NEMCosignatoryModification_init_zero, NEMCosignatoryModification_init_zero, NEMCosignatoryModification_init_zero, NEMCosignatoryModification_init_zero}, false, 0}
#define NEMCosignatoryModification_init_zero     {false, _NEMModificationType_MIN, false, {0, {0}}}
#define NEMImportanceTransfer_init_zero          {false, _NEMImportanceTransferMode_MIN, false, {0, {0}}}
#define NEMSignedTx_init_zero                    {false, {0, {0}}, false, {0, {0}}}
#define NEMDecryptMessage_init_zero              {0, {0, 0, 0, 0, 0, 0, 0, 0}, false, 0, false, {0, {0}}, false, {0, {0}}}
#define NEMDecryptedMessage_init_zero            {false, {0, {0}}}

/* Field tags (for use in manual encoding/decoding) */
#define NEMAddress_address_tag                   1
#define NEMCosignatoryModification_type_tag      1
#define NEMCosignatoryModification_public_key_tag 2
#define NEMDecryptMessage_address_n_tag          1
#define NEMDecryptMessage_network_tag            2
#define NEMDecryptMessage_public_key_tag         3
#define NEMDecryptMessage_payload_tag            4
#define NEMDecryptedMessage_payload_tag          1
#define NEMGetAddress_address_n_tag              1
#define NEMGetAddress_network_tag                2
#define NEMGetAddress_show_display_tag           3
#define NEMImportanceTransfer_mode_tag           1
#define NEMImportanceTransfer_public_key_tag     2
#define NEMMosaic_namespace_tag                  1
#define NEMMosaic_mosaic_tag                     2
#define NEMMosaic_quantity_tag                   3
#define NEMMosaicDefinition_name_tag             1
#define NEMMosaicDefinition_ticker_tag           2
#define NEMMosaicDefinition_namespace_tag        3
#define NEMMosaicDefinition_mosaic_tag           4
#define NEMMosaicDefinition_divisibility_tag     5
#define NEMMosaicDefinition_levy_tag             6
#define NEMMosaicDefinition_fee_tag              7
#define NEMMosaicDefinition_levy_address_tag     8
#define NEMMosaicDefinition_levy_namespace_tag   9
#define NEMMosaicDefinition_levy_mosaic_tag      10
#define NEMMosaicDefinition_supply_tag           11
#define NEMMosaicDefinition_mutable_supply_tag   12
#define NEMMosaicDefinition_transferable_tag     13
#define NEMMosaicDefinition_description_tag      14
#define NEMMosaicDefinition_networks_tag         15
#define NEMMosaicSupplyChange_namespace_tag      1
#define NEMMosaicSupplyChange_mosaic_tag         2
#define NEMMosaicSupplyChange_type_tag           3
#define NEMMosaicSupplyChange_delta_tag          4
#define NEMProvisionNamespace_namespace_tag      1
#define NEMProvisionNamespace_parent_tag         2
#define NEMProvisionNamespace_sink_tag           3
#define NEMProvisionNamespace_fee_tag            4
#define NEMSignedTx_data_tag                     1
#define NEMSignedTx_signature_tag                2
#define NEMTransactionCommon_address_n_tag       1
#define NEMTransactionCommon_network_tag         2
#define NEMTransactionCommon_timestamp_tag       3
#define NEMTransactionCommon_fee_tag             4
#define NEMTransactionCommon_deadline_tag        5
#define NEMTransactionCommon_signer_tag          6
#define NEMAggregateModification_modifications_tag 1
#define NEMAggregateModification_relative_change_tag 2
#define NEMMosaicCreation_definition_tag         1
#define NEMMosaicCreation_sink_tag               2
#define NEMMosaicCreation_fee_tag                3
#define NEMTransfer_recipient_tag                1
#define NEMTransfer_amount_tag                   2
#define NEMTransfer_payload_tag                  3
#define NEMTransfer_public_key_tag               4
#define NEMTransfer_mosaics_tag                  5
#define NEMSignTx_transaction_tag                1
#define NEMSignTx_multisig_tag                   2
#define NEMSignTx_transfer_tag                   3
#define NEMSignTx_cosigning_tag                  4
#define NEMSignTx_provision_namespace_tag        5
#define NEMSignTx_mosaic_creation_tag            6
#define NEMSignTx_supply_change_tag              7
#define NEMSignTx_aggregate_modification_tag     8
#define NEMSignTx_importance_transfer_tag        9

/* Struct field encoding specification for nanopb */
extern const pb_field_t NEMGetAddress_fields[4];
extern const pb_field_t NEMAddress_fields[2];
extern const pb_field_t NEMSignTx_fields[10];
extern const pb_field_t NEMTransactionCommon_fields[7];
extern const pb_field_t NEMTransfer_fields[6];
extern const pb_field_t NEMMosaic_fields[4];
extern const pb_field_t NEMProvisionNamespace_fields[5];
extern const pb_field_t NEMMosaicCreation_fields[4];
extern const pb_field_t NEMMosaicDefinition_fields[16];
extern const pb_field_t NEMMosaicSupplyChange_fields[5];
extern const pb_field_t NEMAggregateModification_fields[3];
extern const pb_field_t NEMCosignatoryModification_fields[3];
extern const pb_field_t NEMImportanceTransfer_fields[3];
extern const pb_field_t NEMSignedTx_fields[3];
extern const pb_field_t NEMDecryptMessage_fields[5];
extern const pb_field_t NEMDecryptedMessage_fields[2];

/* Maximum encoded size of messages (where known) */
#define NEMGetAddress_size                       56
#define NEMAddress_size                          43
#define NEMSignTx_size                           6678
#define NEMTransactionCommon_size                111
#define NEMTransfer_size                         4267
#define NEMMosaic_size                           194
#define NEMProvisionNamespace_size               204
#define NEMMosaicCreation_size                   1116
#define NEMMosaicDefinition_size                 1059
#define NEMMosaicSupplyChange_size               196
#define NEMAggregateModification_size            614
#define NEMCosignatoryModification_size          36
#define NEMImportanceTransfer_size               36
#define NEMSignedTx_size                         2117
#define NEMDecryptMessage_size                   1163
#define NEMDecryptedMessage_size                 1027

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define MESSAGES_NEM_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
